<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.yourproject.mapper.ProductMapper">

    <sql id="productColumns">
        p.product_id, p.user_id, p.category_id, p.title, p.description, p.price, p.status, p.image_url, p.post_date, p.views
    </sql>

    <sql id="productJoins">
        LEFT JOIN tongrenG.USERS u ON p.user_id = u.user_id
        LEFT JOIN tongrenG.CATEGORIES c ON p.category_id = c.category_id
    </sql>

    <resultMap id="ProductResultMap" type="com.example.yourproject.model.Product">
        <id property="productId" column="product_id" javaType="java.lang.Long"/>
        <result property="userId" column="user_id" javaType="java.lang.Long"/>
        <result property="categoryId" column="category_id" javaType="java.lang.Long"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="price" column="price"/>
        <result property="status" column="status" typeHandler="org.apache.ibatis.type.EnumTypeHandler"/> <!-- 显式指定枚举处理器 -->
        <result property="imageUrl" column="image_url"/>
        <result property="postDate" column="post_date" jdbcType="TIMESTAMP"/>
        <result property="views" column="views"/>
        <association property="seller" javaType="com.example.yourproject.model.User">
            <id property="userId" column="u_user_id" javaType="java.lang.Long"/>
            <result property="username" column="u_username"/>
            <result property="email" column="u_email"/>
            <result property="avatarUrl" column="u_avatar_url"/>
        </association>
        <association property="category" javaType="com.example.yourproject.model.Category">
            <id property="categoryId" column="c_category_id" javaType="java.lang.Long"/>
            <result property="categoryName" column="c_category_name"/>
        </association>
    </resultMap>

    <select id="findById" resultMap="ProductResultMap" parameterType="java.lang.Long">
        SELECT 
            <include refid="productColumns" />, 
            u.user_id as u_user_id, u.username as u_username, u.email as u_email, u.avatar_url as u_avatar_url,
            c.category_id as c_category_id, c.category_name as c_category_name
        FROM tongrenG.PRODUCTS p
        <include refid="productJoins" />
        WHERE p.product_id = #{productId}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="productId" keyColumn="product_id" parameterType="com.example.yourproject.model.Product">
        INSERT INTO tongrenG.PRODUCTS (user_id, category_id, title, description, price, status, image_url, post_date, views)
        VALUES (#{userId}, #{categoryId}, #{title}, #{description}, #{price}, 
                #{status, typeHandler=org.apache.ibatis.type.EnumTypeHandler}, 
                #{imageUrl}, #{postDate, jdbcType=TIMESTAMP}, #{views})
    </insert>

    <update id="update" parameterType="com.example.yourproject.model.Product">
        UPDATE tongrenG.PRODUCTS
        <set>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="categoryId != null">category_id = #{categoryId},</if>
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="description != null">description = #{description},</if>
            <if test="price != null">price = #{price},</if>
            <if test="status != null">status = #{status, typeHandler=org.apache.ibatis.type.EnumTypeHandler},</if>
            <if test="imageUrl != null">image_url = #{imageUrl},</if>
            <!-- postDate通常不更新, views由特定方法更新 -->
        </set>
        WHERE product_id = #{productId}
    </update>

    <delete id="deleteById" parameterType="java.lang.Long"> <!-- 方法名与 ProductService 对应 -->
        DELETE FROM tongrenG.PRODUCTS WHERE product_id = #{productId}
    </delete>

    <select id="findAllWithDetails" resultMap="ProductResultMap">
        SELECT 
            <include refid="productColumns" />, 
            u.user_id as u_user_id, u.username as u_username, u.email as u_email, u.avatar_url as u_avatar_url,
            c.category_id as c_category_id, c.category_name as c_category_name
        FROM tongrenG.PRODUCTS p
        <include refid="productJoins" />
        ORDER BY p.post_date DESC
    </select>
    
    <select id="findAllWithDetailsByStatus" resultMap="ProductResultMap" parameterType="java.lang.String">
        SELECT 
            <include refid="productColumns" />, 
            u.user_id as u_user_id, u.username as u_username, u.email as u_email, u.avatar_url as u_avatar_url,
            c.category_id as c_category_id, c.category_name as c_category_name
        FROM tongrenG.PRODUCTS p
        <include refid="productJoins" />
        WHERE p.status = #{status}
        ORDER BY p.post_date DESC
    </select>

    <!-- searchProductsDetailed 与 ProductService 接口中定义的方法名对应 -->
    <select id="searchProductsDetailed" resultMap="ProductResultMap">
        SELECT 
            <include refid="productColumns" />, 
            u.user_id as u_user_id, u.username as u_username, u.email as u_email, u.avatar_url as u_avatar_url,
            c.category_id as c_category_id, c.category_name as c_category_name
        FROM tongrenG.PRODUCTS p
        <include refid="productJoins" />
        <where>
            <if test="keyword != null and keyword != ''">
                AND p.title LIKE '%' || #{keyword} || '%'
            </if>
            <if test="categoryId != null">
                AND p.category_id = #{categoryId}
            </if>
            <if test="status != null and status != ''"> <!-- 接收的是枚举的name()即字符串 -->
                AND p.status = #{status}
            </if>
            <if test="minPrice != null">
                AND p.price >= #{minPrice}
            </if>
            <if test="maxPrice != null">
                AND p.price &lt;= #{maxPrice}
            </if>
        </where>
        ORDER BY p.post_date DESC
    </select>

    <update id="incrementViews" parameterType="java.lang.Long">
        UPDATE tongrenG.PRODUCTS
        SET views = views + 1
        WHERE product_id = #{productId}
    </update>

    <select id="findByUserId" resultMap="ProductResultMap" parameterType="java.lang.Long">
        SELECT 
            <include refid="productColumns" />, 
            u.user_id as u_user_id, u.username as u_username, u.email as u_email, u.avatar_url as u_avatar_url,
            c.category_id as c_category_id, c.category_name as c_category_name
        FROM tongrenG.PRODUCTS p
        <include refid="productJoins" />
        WHERE p.user_id = #{userId}
        ORDER BY p.post_date DESC
    </select>
    <!-- 添加调试SQL，输出用户发布的产品信息 -->
    <select id="debugFindByUserId" resultMap="ProductResultMap" parameterType="java.lang.Long">
        SELECT 
            p.product_id, p.user_id, p.title, p.price, p.status, p.image_url,
            u.username as seller_name
        FROM tongrenG.PRODUCTS p
        LEFT JOIN tongrenG.USERS u ON p.user_id = u.user_id
        WHERE p.user_id = #{userId}
        ORDER BY p.post_date DESC
    </select>

    <select id="findByCategoryId" resultMap="ProductResultMap" parameterType="java.lang.Long">
        SELECT 
            <include refid="productColumns" />, 
            u.user_id as u_user_id, u.username as u_username, u.email as u_email, u.avatar_url as u_avatar_url,
            c.category_id as c_category_id, c.category_name as c_category_name
        FROM tongrenG.PRODUCTS p
        <include refid="productJoins" />
        WHERE p.category_id = #{categoryId}
        ORDER BY p.post_date DESC
    </select>
    
    <!-- 删除了 findAllBasic 和 searchProducts(map) 以匹配新的 ProductService 接口 -->

</mapper>