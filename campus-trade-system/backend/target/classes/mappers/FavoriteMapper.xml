<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.yourproject.mapper.FavoriteMapper">

    <sql id="favoriteColumns">
        f.favorite_id, f.user_id, f.product_id, f.favorite_time
    </sql>

    <resultMap id="FavoriteResultMap" type="com.example.yourproject.model.Favorite">
        <id property="favoriteId" column="favorite_id" javaType="java.lang.Long"/>
        <result property="userId" column="user_id" javaType="java.lang.Long"/>
        <result property="productId" column="product_id" javaType="java.lang.Long"/>
        <result property="favoriteTime" column="favorite_time" jdbcType="TIMESTAMP"/> <!-- Changed from createdAt -->
        
        <association property="user" javaType="com.example.yourproject.model.User" resultMap="com.example.yourproject.mapper.UserMapper.UserResultMap" columnPrefix="fav_user_"/>
        
        <association property="product" javaType="com.example.yourproject.model.Product">
            <id property="productId" column="p_product_id" javaType="java.lang.Long"/>
            <result property="title" column="p_title"/>
            <result property="price" column="p_price"/>
            <result property="status" column="p_status" typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
            <result property="imageUrl" column="p_image_url"/> <!-- Added imageUrl for product -->
            <association property="seller" javaType="com.example.yourproject.model.User" resultMap="com.example.yourproject.mapper.UserMapper.UserResultMap" columnPrefix="p_seller_"/>
        </association>
    </resultMap>

    <select id="findById" resultMap="FavoriteResultMap" parameterType="java.lang.Long"> <!-- Added findById -->
        SELECT 
            <include refid="favoriteColumns" />,
            fav_user.user_id as fav_user_user_id, fav_user.username as fav_user_username, fav_user.avatar_url as fav_user_avatar_url,
            p.product_id as p_product_id, p.title as p_title, p.price as p_price, p.status as p_status, p.image_url as p_image_url,
            p_seller.user_id as p_seller_user_id, p_seller.username as p_seller_username, p_seller.avatar_url as p_seller_avatar_url
        FROM tongrenG.FAVORITES f
        LEFT JOIN tongrenG.USERS fav_user ON f.user_id = fav_user.user_id
        LEFT JOIN tongrenG.PRODUCTS p ON f.product_id = p.product_id
        LEFT JOIN tongrenG.USERS p_seller ON p.user_id = p_seller.user_id
        WHERE f.favorite_id = #{favoriteId}
    </select>

    <select id="findByUserIdAndProductId" resultMap="FavoriteResultMap">
        SELECT 
            <include refid="favoriteColumns" />,
            fav_user.user_id as fav_user_user_id, fav_user.username as fav_user_username, fav_user.avatar_url as fav_user_avatar_url,
            p.product_id as p_product_id, p.title as p_title, p.price as p_price, p.status as p_status, p.image_url as p_image_url,
            p_seller.user_id as p_seller_user_id, p_seller.username as p_seller_username, p_seller.avatar_url as p_seller_avatar_url
        FROM tongrenG.FAVORITES f
        LEFT JOIN tongrenG.USERS fav_user ON f.user_id = fav_user.user_id
        LEFT JOIN tongrenG.PRODUCTS p ON f.product_id = p.product_id
        LEFT JOIN tongrenG.USERS p_seller ON p.user_id = p_seller.user_id
        WHERE f.user_id = #{userId} AND f.product_id = #{productId}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="favoriteId" keyColumn="favorite_id" parameterType="com.example.yourproject.model.Favorite">
        INSERT INTO tongrenG.FAVORITES (user_id, product_id, favorite_time)
        VALUES (#{userId}, #{productId}, #{favoriteTime, jdbcType=TIMESTAMP}) <!-- Changed from createdAt -->
    </insert>

    <!-- deleteByUserIdAndProductId is not standard in FavoriteService, using deleteById (favoriteId) -->
    <!-- If you need it, ensure FavoriteService and FavoriteMapper interface have it. -->
    <!-- <delete id="deleteByUserIdAndProductId">
        DELETE FROM FAVORITES WHERE user_id = #{userId} AND product_id = #{productId}
    </delete> -->

    <delete id="deleteById" parameterType="java.lang.Long"> <!-- Changed from delete to match interface method name -->
        DELETE FROM tongrenG.FAVORITES WHERE favorite_id = #{favoriteId}
    </delete>

    <!-- Renamed from findFavoritesByUserId to findFavoritesByUserIdWithProductDetails to be more descriptive if it joins product details -->
    <select id="findFavoritesByUserIdWithProductDetails" resultMap="FavoriteResultMap" parameterType="java.lang.Long">
        SELECT 
            <include refid="favoriteColumns" />, 
            fav_user.user_id as fav_user_user_id, fav_user.username as fav_user_username, fav_user.avatar_url as fav_user_avatar_url,
            p.product_id as p_product_id, p.title as p_title, p.price as p_price, p.status as p_status, p.image_url as p_image_url,
            p_seller.user_id as p_seller_user_id, p_seller.username as p_seller_username, p_seller.avatar_url as p_seller_avatar_url
        FROM tongrenG.FAVORITES f
        LEFT JOIN tongrenG.USERS fav_user ON f.user_id = fav_user.user_id
        LEFT JOIN tongrenG.PRODUCTS p ON f.product_id = p.product_id
        LEFT JOIN tongrenG.USERS p_seller ON p.user_id = p_seller.user_id <!-- This joins product's seller -->
        WHERE f.user_id = #{userId}
        ORDER BY f.favorite_time DESC
    </select>

    <select id="countFavoritesByProductId" resultType="long" parameterType="java.lang.Long"> <!-- resultType to long -->
        SELECT COUNT(*)
        FROM tongrenG.FAVORITES
        WHERE product_id = #{productId}
    </select>

</mapper>