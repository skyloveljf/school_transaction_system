# 服务器配置
server.port=8080

# Spring应用配置
spring.application.name=campus-second-hand-trading

logging.level.com.fasterxml.jackson.databind=DEBUG
# 添加缓存和Redis相关日志
logging.level.org.springframework.cache=DEBUG
logging.level.org.springframework.data.redis=DEBUG
# 达梦数据库 (DM) 配置
# 请替换为您的实际数据库名称、用户名和密码
# 达梦数据库的默认端口通常是 5236
spring.sql.init.mode=never
spring.datasource.url=jdbc:dm://localhost:5236/SYSDBA
#?????????
spring.datasource.username=STS_DB
#??????????
spring.datasource.password=Liyutian369123.        
spring.datasource.driver-class-name=dm.jdbc.driver.DmDriver
# 如果需要，可以添加达梦特定的连接属性，例如：
# spring.datasource.hikari.connection-init-sql=SET CASE_SENSITIVE_LOGON FALSE

# MyBatis 配置
# 指定MyBatis Mapper XML文件的位置
mybatis.mapper-locations=classpath:mappers/*.xml
# 开启驼峰命名转换：数据库下划线命名自动映射到Java驼峰命名属性
mybatis.configuration.map-underscore-to-camel-case=true
# 指定实体类别名扫描包，方便在Mapper XML中直接使用类名 (如果您的model包路径不同，请修改)
mybatis.type-aliases-package=com.example.yourproject.model

# Redis 配置
spring.data.redis.host=localhost
spring.data.redis.port=6379
# 如果Redis设置了密码，取消注释并配置:
# spring.data.redis.password=YOUR_REDIS_PASSWORD

# Spring Cache 配置 (使用Redis作为缓存提供者)
spring.cache.type=redis
# 可选：设置缓存的默认过期时间 (例如1小时)
spring.cache.redis.time-to-live=60
# 可选：是否缓存null值，默认为false
# spring.cache.redis.cache-null-values=true
# 可选：key的前缀，避免与其他应用冲突
# spring.cache.redis.key-prefix=campus-trade::

# 外部API密钥 (重要：生产环境中应使用更安全的方式管理密钥，如环境变量或配置中心)
# 请替换为您的实际API密钥
deepseek.api.key=sk-a68d5337a716418197c30bc997e52895
deepseek.api.baseurl=https://api.deepseek.com
deepseek.api.model=deepseek-chat
weather.api.key=YOUR_WEATHER_API_KEY
alibaba.agent.api.key=YOUR_ALIBABA_AGENT_API_KEY
alibaba.agent.api.endpoint=YOUR_ALIBABA_AGENT_ENDPOINT

# Actuator (可选, 用于监控和管理应用)
management.endpoints.web.exposure.include=health,info,metrics,beans
management.endpoint.health.show-details=always 

# JWT Configuration
jwt.secret=efjaoeifjjeaofheadkjfhu!@isdfaiheg

# File Upload Configuration
file.upload-dir=./uploads/product-images  # 文件存储的基础路径 (相对路径或绝对路径)
# 文件上传配置
storage.location=./uploads/images
# 这个路径是相对于你的项目运行的根目录。确保这个目录存在并且应用有写入权限。
# 例如，如果你的应用打包成jar后运行在 /opt/app/yourapp.jar，那么 ./uploads/images 就是 /opt/app/uploads/images/
# 例如: c:/uploads/product-images 或 /var/www/uploads/product-images
# 使用相对路径 ./uploads 会在项目运行目录下创建 uploads 文件夹

# Maximum size of a single file, e.g., 10MB, 20MB. Default is 1MB.
spring.servlet.multipart.max-file-size=10MB
# Maximum size of a multipart request (i.e., total size of all files). Default is 10MB.
spring.servlet.multipart.max-request-size=100MB
file.upload-base-url=/media/product-images # 用于构建图片访问URL的基础路径 (后面会用到)